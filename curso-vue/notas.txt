Entrar en la consola:

// Obtener un resultado en consola de una variable
mountedApp.message
    result: "Hola Vue"

// Pasar en consola un valor a la variable
mountedApp.message = "Hola desde Escuela Vue üëå"

//Funci√≥n para a√±adir a favoritos a varios usuarios de github
    addFavorite() {
      this.favorites.set(this.result.id, this.result); 
    }

    Resultado:
    0 {
        key: numero_id,
        value: valores
    }

M√©todo Map(). Crea un nuevo arreglo
    M√©todo de instancia: has
    Devuelve un valor booleano que afirma si un valor se ha asociado al key-objeto Map o no.

Window.localStorage 
Permite almacenar en el navegador los datos.
Sintaxis: 
    miStorage = window.localStorage;

JSON.stringify()
El m√©todo JSON.stringify() convierte un objeto o valor de JavaScript en una cadena de texto JSON
Sintaxis:
    JSON.stringify(value[, replacer[, space]])

JSON.parse()
El m√©todo JSON.parse() analiza una cadena de texto como JSON, transformando opcionalmente el valor producido por el an√°lisis.
Sintaxis:
    JSON.parse(text[, reviver])

Encadenamiento opcional ?
Permite leer el valor de una propiedad ubicada dentro de una cadena de objetos conectados sin tener que validar expresamente que cada referencia en la cadena sea v√°lida
En lugar de detener la aplicaci√≥n, solo retorna un null

Escuela Vue: https://escuelavue.es/cursos/curso-vue-3-desde-cero/v-bind-vue-atributos-dinamicos/

Repositorio Final: https://github.com/escuelavue/curso-vue-3-desde-cero/tree/L12_end